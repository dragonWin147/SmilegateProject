{"version":3,"sources":["file:///Users/brian/Work/C++/ClientCocos/assets/Scripts/GameController.ts"],"names":["_decorator","Component","EditBox","Label","SocketHandler","LobbyText","ccclass","property","GameController","onLoad","getInstance","connectToServer","showNotify","content","lbNotify","string","onLogin","name","edbUserName","pass","edbPass","NAME_LOGIN_EMPTY","PASS_LOGIN_EMPTY","message","method","data","user","sendMessage","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,O,OAAAA,O;AAASC,MAAAA,K,OAAAA,K;;AAChCC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;gCAGjBQ,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAACL,OAAD,C,UAGRK,QAAQ,CAACL,OAAD,C,UAGRK,QAAQ,CAACJ,KAAD,C,2BARb,MACaK,cADb,SACoCP,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAW1CQ,QAAAA,MAAM,GAAG;AACL;AAAA;AAAA,8CAAcC,WAAd,GAA4BC,eAA5B;AACH;;AAEDC,QAAAA,UAAU,CAACC,OAAD,EAAkB;AACxB,eAAKC,QAAL,CAAcC,MAAd,GAAuBF,OAAvB;AACH;;AAEDG,QAAAA,OAAO,GAAG;AACN,cAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBH,MAA5B;AACA,cAAII,IAAI,GAAG,KAAKC,OAAL,CAAaL,MAAxB;;AAEA,cAAIE,IAAI,IAAI,EAAZ,EAAgB;AACZ,iBAAKL,UAAL,CAAgB;AAAA;AAAA,wCAAUS,gBAA1B;AACA;AACH;;AAED,cAAIF,IAAI,IAAI,EAAZ,EAAgB;AACZ,iBAAKP,UAAL,CAAgB;AAAA;AAAA,wCAAUU,gBAA1B;AACA;AACH;;AAED,eAAKV,UAAL,CAAgB,EAAhB;AAEA,cAAMW,OAAO,GAAG;AACZC,YAAAA,MAAM,EAAG,OADG;AAEZC,YAAAA,IAAI,EAAG;AACHC,cAAAA,IAAI,EAAET,IADH;AAEHE,cAAAA,IAAI,EAAEA;AAFH;AAFK,WAAhB;AAQA;AAAA;AAAA,8CAAcT,WAAd,GAA4BiB,WAA5B,CAAwCC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAxC;AACH;;AA5CyC,O","sourcesContent":["import { _decorator, Component, EditBox, Label, Node } from 'cc';\nimport { SocketHandler } from './SocketHandler';\nimport { LobbyText } from './LobbyText';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameController')\nexport class GameController extends Component {\n    @property(EditBox)\n    edbUserName!: EditBox;\n\n    @property(EditBox)\n    edbPass!: EditBox;\n\n    @property(Label)\n    lbNotify!: Label;\n\n\n    onLoad() {\n        SocketHandler.getInstance().connectToServer();\n    }\n\n    showNotify(content: string) {\n        this.lbNotify.string = content;\n    }\n\n    onLogin() {\n        let name = this.edbUserName.string;\n        let pass = this.edbPass.string;\n\n        if (name == \"\") {\n            this.showNotify(LobbyText.NAME_LOGIN_EMPTY);\n            return;\n        }\n\n        if (pass == \"\") {\n            this.showNotify(LobbyText.PASS_LOGIN_EMPTY);\n            return;\n        }\n\n        this.showNotify(\"\");\n\n        const message = {\n            method : \"LOGIN\",\n            data : {\n                user: name,\n                pass: pass\n            }\n        };\n\n        SocketHandler.getInstance().sendMessage(JSON.stringify(message))\n    }\n\n\n}\n\n"]}