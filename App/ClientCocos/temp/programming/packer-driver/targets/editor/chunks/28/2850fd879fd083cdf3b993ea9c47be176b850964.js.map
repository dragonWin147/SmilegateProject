{"version":3,"sources":["file:///Users/brian/Work/C++/ClientCocos/assets/Scripts/GameController.ts"],"names":["_decorator","Component","ccclass","property","GameController","websocket","onLoad","connectToServer","WebSocket","onopen","console","log","send","onmessage","event","data","onclose","onerror","error","sendMessage","message","readyState","OPEN","closeConnection","CONNECTING","close","onDestroy"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;gCAGjBI,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCH,SADpC,CAC8C;AAAA;AAAA;AAAA,eAClCI,SADkC;AAAA;;AAG1CC,QAAAA,MAAM,GAAG;AACL,eAAKC,eAAL;AACH;;AAEDA,QAAAA,eAAe,GAAG;AACd,eAAKF,SAAL,GAAiB,IAAIG,SAAJ,CAAc,qBAAd,CAAjB;;AAEA,eAAKH,SAAL,CAAeI,MAAf,GAAwB,MAAM;AAC1BC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAD0B,CAE1B;;AACA,iBAAKN,SAAL,CAAeO,IAAf,CAAoB,mBAApB;AACH,WAJD;;AAMA,eAAKP,SAAL,CAAeQ,SAAf,GAA4BC,KAAD,IAAW;AAClCJ,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAK,CAACC,IAAvC,EADkC,CAElC;AACH,WAHD;;AAKA,eAAKV,SAAL,CAAeW,OAAf,GAAyB,MAAM;AAC3BN,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAD2B,CAE3B;AACH,WAHD;;AAKA,eAAKN,SAAL,CAAeY,OAAf,GAA0BC,KAAD,IAAW;AAChCR,YAAAA,OAAO,CAACQ,KAAR,CAAc,QAAd,EAAwBA,KAAxB,EADgC,CAEhC;AACH,WAHD;AAIH,SA9ByC,CAgC1C;;;AACAC,QAAAA,WAAW,CAACC,OAAD,EAAkB;AACzB,cAAI,KAAKf,SAAL,CAAegB,UAAf,KAA8Bb,SAAS,CAACc,IAA5C,EAAkD;AAC9C,iBAAKjB,SAAL,CAAeO,IAAf,CAAoBQ,OAApB;AACH,WAFD,MAEO;AACHV,YAAAA,OAAO,CAACQ,KAAR,CAAc,uBAAd;AACH;AACJ,SAvCyC,CAyC1C;;;AACAK,QAAAA,eAAe,GAAG;AACd,cAAI,KAAKlB,SAAL,CAAegB,UAAf,KAA8Bb,SAAS,CAACc,IAAxC,IAAgD,KAAKjB,SAAL,CAAegB,UAAf,KAA8Bb,SAAS,CAACgB,UAA5F,EAAwG;AACpG,iBAAKnB,SAAL,CAAeoB,KAAf;AACH;AACJ,SA9CyC,CAgD1C;AACA;;;AAEAC,QAAAA,SAAS,GAAG;AACR,eAAKH,eAAL;AACH;;AArDyC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameController')\nexport class GameController extends Component {\n    private websocket: WebSocket;\n\n    onLoad() {\n        this.connectToServer();\n    }\n\n    connectToServer() {\n        this.websocket = new WebSocket('ws://localhost:9002');\n\n        this.websocket.onopen = () => {\n            console.log('Connected to server');\n            // Gửi tin nhắn tới server khi kết nối thành công (nếu cần)\n            this.websocket.send('Hello server game');\n        };\n\n        this.websocket.onmessage = (event) => {\n            console.log('Received message:', event.data);\n            // Xử lý dữ liệu từ server khi nhận được tin nhắn\n        };\n\n        this.websocket.onclose = () => {\n            console.log('Disconnected from server');\n            // Xử lý khi mất kết nối\n        };\n\n        this.websocket.onerror = (error) => {\n            console.error('Error:', error);\n            // Xử lý khi có lỗi xảy ra\n        };\n    }\n\n    // Gửi tin nhắn đến server\n    sendMessage(message: string) {\n        if (this.websocket.readyState === WebSocket.OPEN) {\n            this.websocket.send(message);\n        } else {\n            console.error('WebSocket is not open');\n        }\n    }\n\n    // Đóng kết nối WebSocket\n    closeConnection() {\n        if (this.websocket.readyState === WebSocket.OPEN || this.websocket.readyState === WebSocket.CONNECTING) {\n            this.websocket.close();\n        }\n    }\n\n    // Một số phương thức khác nếu cần\n    // ...\n\n    onDestroy() {\n        this.closeConnection();\n    }\n}\n\n"]}